{"ast":null,"code":"var express = require(\"express\");\n\nvar mongoose = require(\"mongoose\");\n\nvar routes = require(\"./routes\");\n\nvar app = express();\nvar PORT = process.env.PORT || 3002;\n\nrequire(\"dotenv\").config();\n\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(express.json());\n\nif (process.env.NODE_ENV === \"production\") {\n  app.use(express.static(\"client/build\"));\n}\n\napp.use(routes);\nvar dbOptions = {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true\n};\nmongoose.connect(process.env.MONGODB_URI || \"mongodb://localhost/burgers\", dbOptions);\napp.listen(PORT, function () {\n  console.log(\"\\uD83C\\uDF0E  ==> API Server now listening on PORT \" + PORT + \"!\");\n});\napp.timeout = 0;","map":{"version":3,"sources":["/Users/matt/Desktop/HTML-JS/BootCampWork/reactburger/server.js"],"names":["express","require","mongoose","routes","app","PORT","process","env","config","use","urlencoded","extended","json","NODE_ENV","static","dbOptions","useNewUrlParser","useUnifiedTopology","useCreateIndex","connect","MONGODB_URI","listen","console","log","timeout"],"mappings":"AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAME,MAAM,GAAGF,OAAO,YAAtB;;AAEA,IAAMG,GAAG,GAAGJ,OAAO,EAAnB;AACA,IAAMK,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AAUAJ,OAAO,CAAE,QAAF,CAAP,CAAmBO,MAAnB;;AAGAJ,GAAG,CAACK,GAAJ,CAAQT,OAAO,CAACU,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACK,GAAJ,CAAQT,OAAO,CAACY,IAAR,EAAR;;AAEA,IAAIN,OAAO,CAACC,GAAR,CAAYM,QAAZ,KAAyB,YAA7B,EAA2C;AACzCT,EAAAA,GAAG,CAACK,GAAJ,CAAQT,OAAO,CAACc,MAAR,CAAe,cAAf,CAAR;AACD;;AAKDV,GAAG,CAACK,GAAJ,CAAQN,MAAR;AASA,IAAMY,SAAS,GAAG;AAChBC,EAAAA,eAAe,EAAE,IADD;AAEhBC,EAAAA,kBAAkB,EAAE,IAFJ;AAGhBC,EAAAA,cAAc,EAAE;AAHA,CAAlB;AAMAhB,QAAQ,CAACiB,OAAT,CACEb,OAAO,CAACC,GAAR,CAAYa,WAAZ,IAA2B,6BAD7B,EAC4DL,SAD5D;AAMAX,GAAG,CAACiB,MAAJ,CAAWhB,IAAX,EAAiB,YAAY;AAC3BiB,EAAAA,OAAO,CAACC,GAAR,yDAAwDlB,IAAxD;AACD,CAFD;AAIAD,GAAG,CAACoB,OAAJ,GAAY,CAAZ","sourcesContent":["const express = require(\"express\");\nconst mongoose = require(\"mongoose\");\n\nconst routes = require(\"./routes\");\n\nconst app = express();\nconst PORT = process.env.PORT || 3002;\n\n\n\n\n\n\n// const path = require(\"path\");\n\n\nrequire (\"dotenv\").config();\n\n// Sets up the Express app to handle data parsing\napp.use(express.urlencoded({ extended: true }));\napp.use(express.json());\n\nif (process.env.NODE_ENV === \"production\") {\n  app.use(express.static(\"client/build\"));\n}\n\n\n//turn on once I have the router. \n\napp.use(routes);\n\n// const dbOptions = {\n// useNewUrlParser: true,\n// useUnifiedTopology: true,\n// useCreateIndex: true\n// }\n\n// Connect to the mongoose database\nconst dbOptions = {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  useCreateIndex: true\n}\n\nmongoose.connect(\n  process.env.MONGODB_URI || \"mongodb://localhost/burgers\", dbOptions\n);\n\n\n// Start the API server\napp.listen(PORT, function () {\n  console.log(`ðŸŒŽ  ==> API Server now listening on PORT ${PORT}!`);\n});\n\napp.timeout=0;\n\n\n\n\n\n\n// var MONGODB_URI = process.env.MONGODB_URI || \n\n\n// // \"mongodb://wednesday:wednesday1@ds047612.mlab.com:47612/heroku_67183r50\";\n// \"mongodb://localhost/braingauge\";\n// // mongoose.connect(MONGODB_URI, {userMongoClient: true});\n\n// mongoose.connect(MONGODB_URI, { userMongoClient: true }).then(\n//   () => {console.log(\"connected\")\n//     /** ready to use. The `mongoose.connect()` promise resolves to mongoose instance. */\n//   },\n//   (err) => {console.log(err)\n//     /** handle initial connection error */\n//   }\n// );\n\n\n\n//     app.listen(PORT, function () {\n//         console.log(\"App listening on PORT \" + PORT);\n//     });\n"]},"metadata":{},"sourceType":"script"}